<div id="map"></div>
<div class="search_box">
    <%= form_tag action: 'index' do %>
	<div> Search: 
	    <%= text_field_tag 'search', @search_term, placeholder: "Search..." %>
	    <%= submit_tag "Search" %> <br>
	    <span class="advanced-option-toggle">+ Advanced Options</span><br>
	    <span class="advanced-search hide">
		Min Exp: 
		<%= text_field_tag 'min', @min_experience, placeholder: "Junior, MidLevel, Senior" %> <br>
		Max Exp: 
		<%= text_field_tag 'max', @max_experience, placeholder: "Junior, MidLevel, Senior" %> <br>
		Job Type: 
		<%= text_field_tag 'type', @job_type,  placeholder: 'Permanent, Contract, Internship' %><br>
		Remote:
		<%= check_box_tag 'remote', "true", @remote %><br>
	    </span>

	</div>
    <% end %>

</div>
<script>
 var map = L.map('map', { zoomControl: false });

 L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
     attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
 }).addTo(map);

 /* Create the GeoJSON objects */

var geojson_jobs = <%= raw @stack_jobs.to_geojson %>

</script>
<script>

 function onEachFeature(feature, layer) {
     var popupContent = "";

     if (feature.properties) {
	 popupContent += "<a href='" + feature.properties.link + "' target='_blank'>" + feature.properties.name + "</a><br>";
	 popupContent += "<strong>Company: </strong>" + feature.properties.company + "<br>";
   if (feature.properties.city){
     popupContent += "<strong>Location: </strong>" + feature.properties.city + "<br>";
   } else {
     popupContent += "<strong>Location: </strong>No office location listed<br>";
   }
	 popupContent += "<strong>Posted: </strong>" + feature.properties.date + "<br>";
	 popupContent += "<strong>Tags: </strong>"+ feature.properties.category.join(", ") + "<br>";
     }


     layer.bindPopup(popupContent);
 }
 var markers = L.markerClusterGroup({
     spiderfyDistanceMultiplier: 2,
     showCoverageOnHover: false,

 });

 var geoJsonLayer = L.geoJSON(geojson_jobs, {

     onEachFeature: onEachFeature,

     pointToLayer: function(feature, latlng) {
         return L.circleMarker(latlng, {
             radius: 10,
             fillColor: "#0080FF",
             color: "#000",
             weight: 1,
             opacity: 0.75,
             fillOpacity: 0.8
         });
     }

 })

 markers.addLayer(geoJsonLayer);
 map.addLayer(markers);
 $(document).ready(function(){
     console.log("ready");
     $(".advanced-option-toggle").on("click", function() {
	 $(".advanced-search").toggleClass("hide");
	 console.log("clicked");
     });
 });

</script>
